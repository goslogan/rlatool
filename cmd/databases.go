/*
Copyright Â© 2024 Nic Gibson <nic.gibson@redis.com>
*/
package cmd

import (
	"github.com/spf13/cobra"
)

// databasesCmd represents the databases command
var databasesCmd = &cobra.Command{
	Use:   "databases",
	Short: "Generate a list of all databases on the cluster",
	Long: `List all the databases in the cluster including all the fields
generated by rladmin status. If the --nodes argument is provided, the 
output will include the nodes on which the database has shards`,
	RunE: func(cmd *cobra.Command, args []string) error {
		nodes, err := cmd.Flags().GetBool("nodes")
		if err != nil {
			return err
		}

		if nodes {
			return buildOutput(cmd, clusterInfo.DatabasesWithNodes())
		} else {
			return buildOutput(cmd, &clusterInfo.Databases)
		}

	},
}

func init() {
	rootCmd.AddCommand(databasesCmd)
	databasesCmd.Flags().BoolP("nodes", "n", false, "include all nodes on which the database is present in output")
	databasesCmd.Flags().BoolP("json", "j", false, "output results as JSON")
	databasesCmd.Flags().BoolP("csv", "c", false, "output results as as CSV")
	databasesCmd.MarkFlagsMutuallyExclusive("json", "csv")
	databasesCmd.MarkFlagsOneRequired("json", "csv")
}
